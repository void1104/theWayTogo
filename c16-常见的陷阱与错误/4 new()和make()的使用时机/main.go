package main

/**
- 切片，映射(map)和通道，使用make
- 数组，结构体和所有的值类型，使用new
*/

/**
- 16.5： 切片本身就是一个指针，不要再用指针传递它
*/

/**
- 16.6： 永远不要使用一个指针指向一个接口类型，因为它已经是一个指针
*/

/**
- 16.7：
	- 值类型的内存是在栈上分配，内存分配快且开销不大。
	- 如果你传递一个指针，而不是一个值类型，go编译器大多数情况会认为需要创建一个对象，
	  并将对象移动到堆上，所以会导致额外的内存分配：因此当使用指针代替值类型作为参数传递时，我们没有任何收获。
 */

/**
- 16.8:
	- 在实际应用中，你不需要并发执行，或者你不需要关注协程和通道的开销，在大多数情况下，通过栈传递参数会更有效率
	- 但是，如果你使用break,return或者panic去跳出一个循环，很有可能会导致内存移除，因为协程正处理某些事情而被阻塞，
	  在实际代码中，通常仅需写一个简单的过程式循环即可。当且仅当代码中并发执行非常重要，才使用协程和通道。
 */
